[{"D:\\ReactApp\\mra\\src\\components\\GetSimilarTracks.js":"1","D:\\ReactApp\\mra\\src\\components\\Tracks.js":"2","D:\\ReactApp\\mra\\src\\App.js":"3","D:\\ReactApp\\mra\\src\\components\\Home.js":"4","D:\\ReactApp\\mra\\src\\components\\GetTopAlbums.js":"5","D:\\ReactApp\\mra\\src\\components\\GetSimilarArtists.js":"6","D:\\ReactApp\\mra\\src\\components\\Artists.js":"7","D:\\ReactApp\\mra\\src\\components\\Albums.js":"8","D:\\ReactApp\\mra\\src\\index.js":"9","D:\\ReactApp\\mra\\src\\reportWebVitals.js":"10","D:\\ReactApp\\mra\\src\\components\\Auto.js":"11"},{"size":4658,"mtime":1607274859399,"results":"12","hashOfConfig":"13"},{"size":208,"mtime":1606660637339,"results":"14","hashOfConfig":"13"},{"size":880,"mtime":1607265823471,"results":"15","hashOfConfig":"13"},{"size":4178,"mtime":1607249713988,"results":"16","hashOfConfig":"13"},{"size":3240,"mtime":1607330119705,"results":"17","hashOfConfig":"13"},{"size":3301,"mtime":1607271901930,"results":"18","hashOfConfig":"13"},{"size":190,"mtime":1606657689535,"results":"19","hashOfConfig":"13"},{"size":189,"mtime":1606659846248,"results":"20","hashOfConfig":"13"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"13"},{"size":1009,"mtime":1607265703936,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1u4up1g",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"D:\\ReactApp\\mra\\src\\components\\GetSimilarTracks.js",["56","57","58"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Tracks from \"./Tracks\";\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst GetTopAlbums = () => {\r\n  const API_KEY = \"a268a7225295d73ca7982e95f5d5a423\";\r\n\r\n  const [tracks, setTracks] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [search1, setSearch1] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [track, setTrack] = useState(\"\");\r\n  const [shouldDisplay, setShouldDisplay] = useState(false);\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [allTracks, setAllTracks] = useState([]);\r\n  const [query2, setQuery2] = useState(\"\");\r\n  const [query3, setQuery3] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current && shouldDisplay) {\r\n      console.log('fetching');\r\n      getTracks();\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [artist, track]);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current && search.length > 1) {\r\n      console.log(\"fetching\");\r\n      getAllArtists();\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [query2]);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current && search1.length > 1) {\r\n      console.log(\"fetching\");\r\n      getAllTracks();\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [query3]);\r\n\r\n  const getTracks = async () => {\r\n    const response = await fetch(\r\n      `https://ws.audioscrobbler.com/2.0/?method=track.getsimilar&limit=10&artist=${artist}&track=${track}&api_key=${API_KEY}&format=json`\r\n    );\r\n    const data = await response.json();\r\n    setTracks(data.similartracks.track);\r\n  };\r\n\r\n  const getAllArtists = async () => {\r\n    const response = await fetch(\r\n      `http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=${query2}&api_key=${API_KEY}&format=json`\r\n    );\r\n    const data = await response.json();\r\n    setAllArtists(data.results.artistmatches.artist);\r\n  };\r\n\r\n  const getAllTracks = async () => {\r\n    const response = await fetch(\r\n      `http://ws.audioscrobbler.com/2.0/?method=track.search&track=${query3}&api_key=${API_KEY}&format=json`\r\n    );\r\n    const data = await response.json();\r\n    setAllTracks(data.results.trackmatches.track);\r\n  };\r\n\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n    setQuery2(search);\r\n  }\r\n\r\n  const updateSearch1 = (e) => {\r\n    setSearch1(e.target.value);\r\n    setQuery3(search1);\r\n  }\r\n\r\n  const getSearch = (e) => {\r\n    e.preventDefault();\r\n    setSearch('');\r\n    setSearch1('');\r\n    setShouldDisplay(true);\r\n  }\r\n\r\n  const linkStyle = {\r\n    color: '#f6d365',\r\n    textDecoration: 'none'\r\n  }\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div className = \"wrapper3\">\r\n      <Link style = {linkStyle} to = \"/\">&larr; Go Back</Link>\r\n      <div className = \"main-div3\">\r\n        <h2>Similar Songs</h2>\r\n        <p>Enter artist and song name</p>\r\n        <div style={{ width: 300 }}>\r\n          <Autocomplete\r\n            id=\"free-solo-demo\"\r\n            freeSolo\r\n            options={allArtists.map((option) => option.name)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Artist Name\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                {...console.log(params)}\r\n                {...setArtist(params.inputProps.value)}\r\n                onChange={updateSearch}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-demo\"\r\n            onChange={getSearch}\r\n            freeSolo\r\n            options={allTracks.map((option) => option.name)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Song Name\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                {...console.log(params)}\r\n                {...setTrack(params.inputProps.value)}\r\n                onChange={updateSearch1}\r\n              />\r\n            )}\r\n          />\r\n          <button onClick = {refreshPage}>Try Again</button>\r\n        </div>\r\n        {shouldDisplay &&\r\n          <div><h3>SIMILAR SONGS TO {track} BY {artist}:</h3>\r\n          {tracks.map((track) => (\r\n            <Tracks \r\n              key = {track.mbid}\r\n              name = {track.name}\r\n              artist = {track.artist.name}\r\n            />\r\n          ))}\r\n        </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetTopAlbums\r\n",["59","60"],"D:\\ReactApp\\mra\\src\\components\\Tracks.js",[],["61","62"],"D:\\ReactApp\\mra\\src\\App.js",["63","64"],"import React from 'react';\nimport './App.css';\nimport GetSimilarArtists from './components/GetSimilarArtists';\nimport GetSimilarTracks from './components/GetSimilarTracks';\nimport GetTopAlbums from './components/GetTopAlbums';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Auto from './components/Auto';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path = \"/\" exact component = {Home} />\n          <Route path = \"/getsimilarartists\" component = {GetSimilarArtists} />\n          <Route path = \"/gettopalbums\" component = {GetTopAlbums} />\n          <Route path = \"/getsimilartracks\" component = {GetSimilarTracks} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\ReactApp\\mra\\src\\components\\Home.js",["65","66","67","68","69","70","71","72","73","74"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport img from './img.png';\r\nimport logo from './logo.png';\r\nimport aos from 'aos';\r\nimport \"aos/dist/aos.css\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    useEffect(() => {\r\n        aos.init();\r\n        aos.refresh()\r\n    }, [])\r\n\r\n    const style1 = {\r\n        color: 'white',\r\n        fontSize: '20px',\r\n        textDecoration: 'none',\r\n        padding: '10px 40px 10px 40px'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"wrapper\">\r\n                <header>\r\n                    <div class = \"logo-container\">\r\n                        <h3>M  R  A</h3>\r\n                    </div>\r\n                    <nav>\r\n                        <ul className = \"nav-links\">\r\n                            <li><a className = \"nav-link\" href = \"#\">Home</a></li>\r\n                            <li><a className = \"nav-link\" href = \"#prvi\">Get Similar Artists</a></li>\r\n                            <li><a className = \"nav-link\" href = \"#drugi\">Get Top Albums</a></li>\r\n                            <li><a className = \"nav-link\" href = \"#treci\">Get Similar Songs</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n\r\n                <main>\r\n                    <section className = \"presentation\">\r\n                        <div className = \"introduction\">\r\n                            <div className = \"intro-text\">\r\n                                <h1>Music Recommendations</h1>\r\n                                <p>Get recommendations based on your favorite music artists and songs! This app uses <a target = \"_blank\" href = \"https://www.last.fm/home\">Last FM</a> data to provide you with best music recommendations.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"cover\">\r\n                            <img src = {img} />\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n            </div>\r\n            <a name = \"prvi\"></a>\r\n            <div data-aos=\"fade-up\" className = \"prvi\">\r\n                <div data-aos=\"fade-up\" className = \"ikona1\">\r\n                    <i class=\"fas fa-music\"></i>\r\n                </div>\r\n                <div data-aos=\"fade-up\" className = \"tekst1\">\r\n                    <h2>Get Similar Artists</h2>\r\n                    <p>Searching for someone similar to your favorite musician?</p>\r\n                    <button><Link style = {style1} to = \"/getsimilarartists\">Try it!</Link></button>\r\n                </div>\r\n            </div>\r\n\r\n            <a name = \"drugi\"></a>\r\n            <div className = \"drugi\">    \r\n                <div data-aos=\"fade-up\" className = \"tekst2\">\r\n                    <h2>Get Top Albums</h2>\r\n                    <p>Want to listen to more albums by your favorite artists but don't know where to start?</p>\r\n                    <button><Link className = \"link2\" to = \"/gettopalbums\">Try it!</Link></button>\r\n                </div>\r\n                <div data-aos=\"fade-up\" className = \"ikona2\">\r\n                    <i class=\"fas fa-compact-disc\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            <a name = \"treci\"></a>\r\n            <div data-aos=\"fade-up\" className = \"treci\">\r\n                <div data-aos=\"fade-up\" className = \"ikona3\">\r\n                    <i class=\"fas fa-headphones-alt\"></i>\r\n                </div>\r\n                <div data-aos=\"fade-up\" className = \"tekst3\">\r\n                    <h2>Get Similar Songs</h2>\r\n                    <p>Want to find similar songs to your favorite ones?</p>\r\n                    <button><Link className = \"link3\" to = \"/getsimilartracks\">Try it!</Link></button>\r\n                </div>\r\n            </div>\r\n\r\n            <footer>\r\n                <p data-aos=\"fade-up\">Music Recommendation App &copy; by Jelena</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n/*<Link style = {style} to = \"/getsimilarartists\">Get Similar Artists</Link>\r\n\r\n\r\n<Link style = {style} to = \"/gettopalbums\">Get Top Albums</Link> \r\n\r\n\r\n<Link style = {style} to = \"/getsimilartracks\">Get Similar Songs</Link>*/\r\n","D:\\ReactApp\\mra\\src\\components\\GetTopAlbums.js",["75","76"],"D:\\ReactApp\\mra\\src\\components\\GetSimilarArtists.js",["77","78"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Artists from \"./Artists\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst GetSimilarArtists = () => {\r\n  const API_KEY = \"a268a7225295d73ca7982e95f5d5a423\";\r\n\r\n  const [artists, setArtists] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [shouldDisplay, setshouldDisplay] = useState(false);\r\n  const [allArtists, setAllArtists] = useState([]);\r\n  const [query2, setQuery2] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      console.log(\"fetching\");\r\n      getSimilarArtists();\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current && search.length > 1) {\r\n      console.log(\"fetching\");\r\n      getAllArtists();\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [query2]);\r\n\r\n  const getSimilarArtists = async () => {\r\n    const response = await fetch(\r\n      `http://ws.audioscrobbler.com/2.0/?method=artist.getsimilar&artist=${query}&autocorrect=[1]&limit=10&api_key=${API_KEY}&format=json`\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n    setArtists(data.similarartists.artist);\r\n  };\r\n\r\n  const getAllArtists = async () => {\r\n    const response = await fetch(\r\n      `http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=${query2}&api_key=${API_KEY}&format=json`\r\n    );\r\n    const data = await response.json();\r\n    setAllArtists(data.results.artistmatches.artist);\r\n  };\r\n\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n    setQuery2(search);\r\n  };\r\n\r\n  const getSearch = (e) => {\r\n    e.preventDefault();\r\n    setSearch(\"\");\r\n    setshouldDisplay(true);\r\n  };\r\n\r\n  const linkStyle = {\r\n    color: \"rgb(198, 129, 219)\",\r\n    textDecoration: \"none\",\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper1\">\r\n      <Link style={linkStyle} to=\"/\">\r\n        &larr; Go Back\r\n      </Link>\r\n      <div className=\"main-div1\">\r\n        <h2>Similar Artists</h2>\r\n        <p>Enter artist name:</p>\r\n        <div style={{ width: 300 }}>\r\n          <Autocomplete\r\n            id=\"free-solo-demo\"\r\n            onChange={getSearch}\r\n            freeSolo\r\n            options={allArtists.map((option) => option.name)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Artist Name\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                {...console.log(params)}\r\n                {...setQuery(params.inputProps.value)}\r\n                onChange={updateSearch}\r\n              />\r\n            )}\r\n          />\r\n          <button onClick = {refreshPage}>Try Again</button>\r\n        </div>\r\n        {shouldDisplay && (\r\n          <div>\r\n            <h3>SIMILAR TO {query}:</h3>\r\n            {artists.map((artist) => (\r\n              <Artists key={artist.mbid} name={artist.name} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSimilarArtists;\r\n","D:\\ReactApp\\mra\\src\\components\\Artists.js",[],["79","80"],"D:\\ReactApp\\mra\\src\\components\\Albums.js",[],["81","82"],"D:\\ReactApp\\mra\\src\\index.js",[],["83","84"],"D:\\ReactApp\\mra\\src\\reportWebVitals.js",[],["85","86"],"D:\\ReactApp\\mra\\src\\components\\Auto.js",[],{"ruleId":"87","severity":1,"message":"88","line":30,"column":6,"nodeType":"89","endLine":30,"endColumn":21,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":39,"column":6,"nodeType":"89","endLine":39,"endColumn":14,"suggestions":"92"},{"ruleId":"87","severity":1,"message":"93","line":48,"column":6,"nodeType":"89","endLine":48,"endColumn":14,"suggestions":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":20},{"ruleId":"101","severity":1,"message":"105","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":12},{"ruleId":"101","severity":1,"message":"106","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"108","line":33,"column":33,"nodeType":"109","endLine":33,"endColumn":70},{"ruleId":"110","severity":1,"message":"111","line":46,"column":121,"nodeType":"112","endLine":46,"endColumn":138},{"ruleId":"113","severity":1,"message":"114","line":50,"column":29,"nodeType":"109","endLine":50,"endColumn":48},{"ruleId":"115","severity":1,"message":"116","line":55,"column":13,"nodeType":"109","endLine":55,"endColumn":30},{"ruleId":"107","severity":1,"message":"117","line":55,"column":13,"nodeType":"109","endLine":55,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":67,"column":13,"nodeType":"109","endLine":67,"endColumn":31},{"ruleId":"107","severity":1,"message":"117","line":67,"column":13,"nodeType":"109","endLine":67,"endColumn":31},{"ruleId":"115","severity":1,"message":"116","line":79,"column":13,"nodeType":"109","endLine":79,"endColumn":31},{"ruleId":"107","severity":1,"message":"117","line":79,"column":13,"nodeType":"109","endLine":79,"endColumn":31},{"ruleId":"87","severity":1,"message":"118","line":27,"column":6,"nodeType":"89","endLine":27,"endColumn":13,"suggestions":"119"},{"ruleId":"87","severity":1,"message":"91","line":36,"column":6,"nodeType":"89","endLine":36,"endColumn":14,"suggestions":"120"},{"ruleId":"87","severity":1,"message":"121","line":26,"column":6,"nodeType":"89","endLine":26,"endColumn":13,"suggestions":"122"},{"ruleId":"87","severity":1,"message":"91","line":35,"column":6,"nodeType":"89","endLine":35,"endColumn":14,"suggestions":"123"},{"ruleId":"95","replacedBy":"124"},{"ruleId":"97","replacedBy":"125"},{"ruleId":"95","replacedBy":"126"},{"ruleId":"97","replacedBy":"127"},{"ruleId":"95","replacedBy":"128"},{"ruleId":"97","replacedBy":"129"},{"ruleId":"95","replacedBy":"130"},{"ruleId":"97","replacedBy":"131"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTracks' and 'shouldDisplay'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has missing dependencies: 'getAllArtists' and 'search.length'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'getAllTracks' and 'search1.length'. Either include them or remove the dependency array.",["134"],"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'Autocomplete' is defined but never used.","Identifier","unusedVar","'Auto' is defined but never used.","'logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getAlbums'. Either include it or remove the dependency array.",["137"],["138"],"React Hook useEffect has a missing dependency: 'getSimilarArtists'. Either include it or remove the dependency array.",["139"],["140"],["135"],["136"],["135"],["136"],["135"],["136"],["135"],["136"],{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"143","fix":"149"},{"desc":"150","fix":"151"},{"desc":"143","fix":"152"},"Update the dependencies array to be: [artist, getTracks, shouldDisplay, track]",{"range":"153","text":"154"},"Update the dependencies array to be: [getAllArtists, query2, search.length]",{"range":"155","text":"156"},"Update the dependencies array to be: [getAllTracks, query3, search1.length]",{"range":"157","text":"158"},"Update the dependencies array to be: [getAlbums, query]",{"range":"159","text":"160"},{"range":"161","text":"156"},"Update the dependencies array to be: [getSimilarArtists, query]",{"range":"162","text":"163"},{"range":"164","text":"156"},[1037,1052],"[artist, getTracks, shouldDisplay, track]",[1245,1253],"[getAllArtists, query2, search.length]",[1446,1454],"[getAllTracks, query3, search1.length]",[834,841],"[getAlbums, query]",[1034,1042],[849,856],"[getSimilarArtists, query]",[1049,1057]]